!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var s in n)("object"==typeof exports?exports:e)[s]=n[s]}}(self,(()=>(()=>{"use strict";var e,t,n={22:e=>{e.exports=require("@journeyapps/wa-sqlite/dist/mc-wa-sqlite.mjs")},47:(e,t,n)=>{n.d(t,{e:()=>l});var s=n(858),r=n(708),i=n(790),a=n(411),o=n(268),c=n(90);class l extends i.R{constructor(e){super({name:e.dbFilename,openConnection:async()=>{const{workerPort:t,temporaryStorage:n}=e;if(t){const i=s.wrap(t);return new o.$({remote:i,identifier:e.dbFilename,baseConnection:await i({...e,temporaryStorage:n??a.IN.MEMORY,flags:(0,r.yV)(e.flags),encryptionKey:e.encryptionKey})})}return new c.J({dbFilename:e.dbFilename,dbLocation:e.dbLocation,debugMode:e.debugMode,flags:e.flags,temporaryStorage:n,logger:e.logger,vfs:e.vfs,encryptionKey:e.encryptionKey,worker:e.worker}).openConnection()},debugMode:e.debugMode,logger:e.logger})}}},84:(e,t,n)=>{n.d(t,{GD:()=>s,Iy:()=>d,Ry:()=>h,Wk:()=>u,Xg:()=>o,oB:()=>l,rC:()=>c});var s,r=n(808),i=n(422),a=n(354);!function(e){e.IDBBatchAtomicVFS="IDBBatchAtomicVFS",e.OPFSCoopSyncVFS="OPFSCoopSyncVFS",e.AccessHandlePoolVFS="AccessHandlePoolVFS"}(s||(s={}));const o=async()=>{const{default:e}=await Promise.resolve().then(n.t.bind(n,914,23));return e()},c=async()=>{const{default:e}=await Promise.resolve().then(n.t.bind(n,895,23));return e()},l=async()=>{const{default:e}=await Promise.resolve().then(n.t.bind(n,971,23));return e()},u=async()=>{const{default:e}=await Promise.resolve().then(n.t.bind(n,22,23));return e()},d={[s.IDBBatchAtomicVFS]:async e=>{let t;t=e.encryptionKey?await c():await o();const{IDBBatchAtomicVFS:s}=await Promise.resolve().then(n.t.bind(n,573,23));return{module:t,vfs:await s.create(e.dbFileName,t,{lockPolicy:"exclusive"})}},[s.AccessHandlePoolVFS]:async e=>{let t;t=e.encryptionKey?await u():await l();const{AccessHandlePoolVFS:s}=await Promise.resolve().then(n.t.bind(n,710,23));return{module:t,vfs:await s.create(e.dbFileName,t)}},[s.OPFSCoopSyncVFS]:async e=>{let t;t=e.encryptionKey?await u():await l();const{OPFSCoopSyncVFS:s}=await Promise.resolve().then(n.t.bind(n,950,23));return{module:t,vfs:await s.create(e.dbFileName,t)}}};class h extends i.BaseObserver{options;_sqliteAPI=null;_dbP=null;_moduleFactory;updatedTables;updateTimer;statementMutex;broadcastChannel;connectionId;constructor(e){super(),this.options=e,this.updatedTables=new Set,this.updateTimer=null,this.broadcastChannel=null,this.connectionId=(new Date).valueOf()+Math.random(),this.statementMutex=new a.Mutex,this._moduleFactory=d[this.options.vfs]}get sqliteAPI(){if(!this._sqliteAPI)throw new Error("Initialization has not completed");return this._sqliteAPI}get dbP(){if(!this._dbP)throw new Error("Initialization has not completed");return this._dbP}async openDB(){return this._dbP=await this.sqliteAPI.open_v2(this.options.dbFilename),this._dbP}async executeEncryptionPragma(){this.options.encryptionKey&&await this.executeSingleStatement(`PRAGMA key = "${this.options.encryptionKey}"`)}async openSQLiteAPI(){const{module:e,vfs:t}=await this._moduleFactory({dbFileName:this.options.dbFilename,encryptionKey:this.options.encryptionKey}),n=r.Factory(e);if(n.vfs_register(t,!0),e.ccall("powersync_init_static","int",[]),this.options.encryptionKey){if(0!==e.ccall("sqlite3mc_vfs_create","int",["string","int"],[this.options.dbFilename,1]))throw new Error("Failed to create multiple cipher vfs, Database encryption will not work")}return n}registerBroadcastListeners(){this.broadcastChannel=new BroadcastChannel(`${this.options.dbFilename}-table-updates`),this.broadcastChannel.addEventListener("message",(e=>{const t=e.data;this.connectionId!=t.connectionId&&this.queueTableUpdate(t.changedTables,!1)}))}queueTableUpdate(e,t=!0){e.forEach((e=>this.updatedTables.add(e))),null==this.updateTimer&&(this.updateTimer=setTimeout((()=>this.fireUpdates(t)),0))}async init(){this._sqliteAPI=await this.openSQLiteAPI(),await this.openDB(),this.registerBroadcastListeners(),await this.executeSingleStatement(`PRAGMA temp_store = ${this.options.temporaryStorage};`),await this.executeEncryptionPragma(),this.sqliteAPI.update_hook(this.dbP,((e,t,n)=>{if(!n)return;const s=new Set([n]);this.queueTableUpdate(s)}))}async getConfig(){return this.options}fireUpdates(e=!0){this.updateTimer=null;const t={tables:[...this.updatedTables],groupedUpdates:{},rawUpdates:[]};e&&this.broadcastChannel.postMessage({changedTables:this.updatedTables,connectionId:this.connectionId}),this.updatedTables.clear(),this.iterateListeners((e=>e.tablesUpdated?.(t)))}async executeBatch(e,t){return this.acquireExecuteLock((async()=>{let n=0;try{await this.executeSingleStatement("BEGIN TRANSACTION");const s=t||[];for await(const i of this.sqliteAPI.statements(this.dbP,e)){if(null===i)return{rowsAffected:0,rows:{_array:[],length:0}};for(const e of s){for(let t=0;t<e.length;t++){const n=e[t];"boolean"==typeof n&&(e[t]=n?1:0)}t&&this.sqliteAPI.bind_collection(i,e);await this.sqliteAPI.step(i)===r.SQLITE_DONE&&(n+=this.sqliteAPI.changes(this.dbP)),this.sqliteAPI.reset(i)}}await this.executeSingleStatement("COMMIT")}catch(e){return await this.executeSingleStatement("ROLLBACK"),{rowsAffected:0,rows:{_array:[],length:0}}}return{rowsAffected:n,rows:{_array:[],length:0}}}))}async execute(e,t){return this.acquireExecuteLock((async()=>this.executeSingleStatement(e,t)))}async close(){this.broadcastChannel?.close(),await this.sqliteAPI.close(this.dbP)}async registerOnTableChange(e){return this.registerListener({tablesUpdated:t=>e(t)})}acquireExecuteLock=e=>this.statementMutex.runExclusive(e);async executeSingleStatement(e,t){const n=[];for await(const s of this.sqliteAPI.statements(this.dbP,e)){let e;const i=t?[t]:[[]];for(const a of i){a.forEach(((e,t,n)=>{"boolean"==typeof e&&(n[t]=e?1:0)})),this.sqliteAPI.reset(s),t&&this.sqliteAPI.bind_collection(s,a);const i=[];for(;await this.sqliteAPI.step(s)===r.SQLITE_ROW;){const e=this.sqliteAPI.row(s);i.push(e)}e=e??this.sqliteAPI.column_names(s),e.length&&n.push({columns:e,rows:i})}if(t)break}const s=[];for(const e of n)for(const t of e.rows){const n={};e.columns.forEach(((e,s)=>{n[e]=t[s]})),s.push(n)}return{insertId:this.sqliteAPI.last_insert_id(this.dbP),rowsAffected:this.sqliteAPI.changes(this.dbP),rows:{_array:s,length:s.length}}}}},90:(e,t,n)=>{n.d(t,{J:()=>u});var s=n(858),r=n(84);function i(e,t=!0,s="",i){const a=i==r.GD.AccessHandlePoolVFS||i==r.GD.OPFSCoopSyncVFS;return s?!a&&t?new SharedWorker(`${s}`,{name:`shared-DB-worker-${e}`}).port:new Worker(`${s}`,{name:`DB-worker-${e}`}):!a&&t?new SharedWorker(new URL(n.p+n.u(673),n.b),{name:`shared-DB-worker-${e}`,type:void 0}).port:new Worker(new URL(n.p+n.u(54),n.b),{name:`DB-worker-${e}`,type:void 0})}var a=n(910),o=n(790),c=n(411),l=n(268);class u extends a.P{constructor(e){super(e),function(e){if("vfs"in e&&"flags"in e){const{vfs:t,flags:n={}}=e;if(t!==r.GD.IDBBatchAtomicVFS&&"useWebWorker"in n&&!n.useWebWorker)throw new Error(`Invalid configuration: The 'useWebWorker' flag must be true when using an OPFS-based VFS (${t}).`)}}(e)}get waOptions(){return this.options}openAdapter(){return new o.R({name:this.options.dbFilename,openConnection:()=>this.openConnection(),debugMode:this.options.debugMode,logger:this.logger})}async openConnection(){const{enableMultiTabs:e,useWebWorker:t}=this.resolvedFlags,{vfs:n=r.GD.IDBBatchAtomicVFS,temporaryStorage:a=c.IN.MEMORY,encryptionKey:o}=this.waOptions;if(e||this.logger.warn("Multiple tabs are not enabled in this browser"),t){const t=this.options.worker,r="function"==typeof t?function(e){const t=e();return function(e){return"port"in e}(t)?t.port:t}((()=>t({...this.options,temporaryStorage:a,flags:this.resolvedFlags,encryptionKey:o}))):i(this.options.dbFilename,e,t,this.waOptions.vfs),c=s.wrap(r);return new l.$({remote:c,baseConnection:await c({dbFilename:this.options.dbFilename,vfs:n,temporaryStorage:a,flags:this.resolvedFlags,encryptionKey:o}),identifier:this.options.dbFilename,onClose:()=>{r instanceof Worker?r.terminate():r.close()}})}return new r.Ry({dbFilename:this.options.dbFilename,dbLocation:this.options.dbLocation,debugMode:this.options.debugMode,vfs:n,temporaryStorage:a,flags:this.resolvedFlags,encryptionKey:o})}}},268:(e,t,n)=>{n.d(t,{$:()=>r});var s=n(858);class r{options;constructor(e){this.options=e}get baseConnection(){return this.options.baseConnection}init(){return this.baseConnection.init()}async shareConnection(){const{identifier:e,remote:t}=this.options;return{port:await t[s.createEndpoint](),identifier:e}}async registerOnTableChange(e){return this.baseConnection.registerOnTableChange(s.proxy(e))}async close(){await this.baseConnection.close(),this.options.remote[s.releaseProxy](),this.options.onClose?.()}execute(e,t){return this.baseConnection.execute(e,t)}executeBatch(e,t){return this.baseConnection.executeBatch(e,t)}getConfig(){return this.baseConnection.getConfig()}}},354:e=>{e.exports=require("async-mutex")},389:(e,t,n)=>{function s(e){e??=navigator;const t=function(e){const t=e.userAgentData?.brands;if(null!=t){const e=[{name:"Google Chrome",value:"Chrome"},{name:"Opera",value:"Opera"},{name:"Edge",value:"Edge"},{name:"Chromium",value:"Chromium"}];for(let{name:n,value:s}of e){const e=t.find((e=>e.brand==n));if(null!=e)return`${s}/${e.version}`}}const n=e.userAgent,s=[{re:/(?:firefox|fxios)\/(\d+)/i,value:"Firefox"},{re:/(?:edg|edge|edga|edgios)\/(\d+)/i,value:"Edge"},{re:/opr\/(\d+)/i,value:"Opera"},{re:/(?:chrome|chromium|crios)\/(\d+)/i,value:"Chrome"},{re:/version\/(\d+).*safari/i,value:"Safari"}];for(let{re:e,value:t}of s){const s=e.exec(n);if(null!=s)return`${t}/${s[1]}`}return null}(e),n=function(e){if(null!=e.userAgentData?.platform)return e.userAgentData.platform.toLowerCase();const t=e.userAgent,n=[{re:/windows/i,value:"windows"},{re:/android/i,value:"android"},{re:/linux/i,value:"linux"},{re:/iphone|ipad|ipod/i,value:"ios"},{re:/macintosh|mac os x/i,value:"macos"}];for(let{re:e,value:s}of n)if(e.test(t))return s;return null}(e);return[t,n].filter((e=>null!=e))}n.d(t,{P:()=>s})},411:(e,t,n)=>{var s;function r(){return"undefined"==typeof window}n.d(t,{IN:()=>s,Yd:()=>a,fL:()=>r,sZ:()=>i}),function(e){e.MEMORY="memory",e.FILESYSTEM="file"}(s||(s={}));const i={broadcastLogs:!0,disableSSRWarning:!1,ssrMode:r(),enableMultiTabs:void 0!==globalThis.navigator&&"undefined"!=typeof SharedWorker&&!navigator.userAgent.match(/(Android|iPhone|iPod|iPad)/i)&&!window.safari,useWebWorker:!0};function a(e){const t={...i,...e??{}};return void 0!==e?.enableMultiTabs&&(t.enableMultiTabs=e.enableMultiTabs),!1===e?.useWebWorker&&(t.enableMultiTabs=!1),t}},417:(e,t,n)=>{n.d(t,{H:()=>a});var s=n(422),r=n(389);class i extends s.FetchImplementationProvider{getFetch(){return fetch.bind(globalThis)}}class a extends s.AbstractRemote{connector;logger;_bson;constructor(e,t=s.DEFAULT_REMOTE_LOGGER,n){super(e,t,{...n??{},fetchImplementation:n?.fetchImplementation??new i}),this.connector=e,this.logger=t}getUserAgent(){let e=[super.getUserAgent(),"powersync-web"];try{e.push(...(0,r.P)())}catch(e){this.logger.warn("Failed to get user agent info",e)}return e.join(" ")}async getBSON(){if(this._bson)return this._bson;const{BSON:e}=await Promise.resolve().then(n.t.bind(n,606,23));return this._bson=e,this._bson}}},422:e=>{e.exports=require("@powersync/common")},477:(e,t,n)=>{n.d(t,{u:()=>i});var s=n(422),r=n(708);class i extends s.AbstractPowerSyncDatabaseOpenFactory{options;constructor(e){super(e),this.options=e}generateOptions(){return{...this.options,database:this.openDB(),schema:this.schema,flags:(0,r.yV)(this.options.flags)}}generateInstance(e){return new r.k1(e)}}},486:(e,t,n)=>{n.d(t,{H:()=>u});var s=n(858);class r{}var i,a=n(422),o=(n(354),n(954),n(417),n(498));n(790),n(268),n(599);!function(e){e.CLOSE_CLIENT="close-client"}(i||(i={}));a.BaseObserver;var c=n(411);class l extends r{options;statusChanged;webDB;constructor(e,t,n){super(),this.options=e,this.statusChanged=t,this.webDB=n}async getDBWorkerPort(){const{port:e}=await this.webDB.shareConnection();return s.transfer(e,[e])}async fetchCredentials(){const e=await this.options.remote.getCredentials();return null==e?null:{endpoint:e.endpoint,token:e.token}}async uploadCrud(){await this.options.uploadCrud()}get logger(){return this.options.logger}trace(...e){this.logger?.trace(...e)}debug(...e){this.logger?.debug(...e)}info(...e){this.logger?.info(...e)}log(...e){this.logger?.log(...e)}warn(...e){this.logger?.warn(...e)}error(...e){this.logger?.error(...e)}time(e){this.logger?.time(e)}timeEnd(e){this.logger?.timeEnd(e)}}class u extends o.U{syncManager;clientProvider;messagePort;isInitialized;dbAdapter;constructor(e){super(e),this.dbAdapter=e.db;const t={...e,dbFilename:this.options.identifier,temporaryStorage:c.IN.MEMORY,flags:(0,c.Yd)(e.flags)},r=e.sync?.worker;this.messagePort=r?"function"==typeof r?r(t).port:new SharedWorker(`${r}`,{name:`shared-sync-${this.webOptions.identifier}`}).port:new SharedWorker(new URL(n.p+n.u(118),n.b),{name:`shared-sync-${this.webOptions.identifier}`,type:void 0}).port,this.syncManager=s.wrap(this.messagePort),this.triggerCrudUpload=this.syncManager.triggerCrudUpload;const{crudUploadThrottleMs:i,identifier:a,retryDelayMs:o}=this.options,u={...this.webOptions.flags,workers:void 0};this.isInitialized=this.syncManager.setParams({dbParams:this.dbAdapter.getConfiguration(),streamOptions:{crudUploadThrottleMs:i,identifier:a,retryDelayMs:o,flags:u}}),this.clientProvider=new l(this.webOptions,(e=>{this.iterateListeners((t=>this.updateSyncStatus(e)))}),e.db),s.expose(this.clientProvider,this.messagePort)}async connect(e){return await this.waitForReady(),await this.disconnect(),this.syncManager.connect(e)}async disconnect(){return await this.waitForReady(),this.syncManager.disconnect()}async getWriteCheckpoint(){return await this.waitForReady(),this.syncManager.getWriteCheckpoint()}async hasCompletedSync(){return this.syncManager.hasCompletedSync()}async dispose(){await this.waitForReady();const e={event:i.CLOSE_CLIENT,data:{}};this.messagePort.postMessage(e),this.syncManager[s.releaseProxy](),this.messagePort.close()}async waitForReady(){return this.isInitialized}async _testUpdateStatus(e){return await this.isInitialized,this.syncManager._testUpdateAllStatuses(e.toJSON())}}},498:(e,t,n)=>{n.d(t,{U:()=>i});var s=n(422),r=n(599);class i extends s.AbstractStreamingSyncImplementation{constructor(e){super(e)}get webOptions(){return this.options}obtainLock(e){const t=`streaming-sync-${e.type}-${this.webOptions.identifier}`;return e.type==s.LockType.SYNC&&console.debug("requesting lock for ",t),(0,r.A)().request(t,{signal:e.signal},e.callback)}}},573:e=>{e.exports=require("@journeyapps/wa-sqlite/src/examples/IDBBatchAtomicVFS.js")},599:(e,t,n)=>{n.d(t,{A:()=>s});const s=()=>{if("locks"in navigator&&navigator.locks)return navigator.locks;throw new Error("Navigator locks are not available in an insecure context. Use a secure context such as HTTPS or http://localhost.")}},606:e=>{e.exports=require("bson")},708:(e,t,n)=>{n.d(t,{Do:()=>h,k1:()=>g,yV:()=>p});var s=n(422),r=n(354),i=n(599),a=n(90),o=n(411),c=n(486);class l extends s.BaseObserver{syncMutex;crudMutex;isConnected;lastSyncedAt;syncStatus;constructor(e){super(),this.syncMutex=new r.Mutex,this.crudMutex=new r.Mutex,this.syncStatus=new s.SyncStatus({}),this.isConnected=!1}obtainLock(e){return(e.type==s.LockType.CRUD?this.crudMutex:this.syncMutex).runExclusive(e.callback)}async connect(e){}async dispose(){}async disconnect(){}async waitForReady(){}async waitForStatus(e){return new Promise((e=>{}))}async getWriteCheckpoint(){return"1"}async hasCompletedSync(){return!1}triggerCrudUpload(){}}var u=n(417),d=n(498);const h={...o.sZ,externallyUnload:!1},p=e=>({...h,...e,...(0,o.Yd)(e)});class g extends s.AbstractPowerSyncDatabase{options;static SHARED_MUTEX=new r.Mutex;unloadListener;resolvedFlags;constructor(e){super(e),this.options=e,function(e){if("database"in e&&"encryptionKey"in e){const{database:t}=e;if((0,s.isSQLOpenFactory)(t)||(0,s.isDBAdapter)(t))throw new Error(`Invalid configuration: 'encryptionKey' should only be included inside the database object when using a custom ${(0,s.isSQLOpenFactory)(t)?"WASQLiteOpenFactory":"WASQLiteDBAdapter"} constructor.`)}}(e),this.resolvedFlags=p(e.flags),this.resolvedFlags.enableMultiTabs&&!this.resolvedFlags.externallyUnload&&(this.unloadListener=()=>this.close({disconnect:!1}),window.addEventListener("unload",this.unloadListener))}async _initialize(){}openDBAdapter(e){return new a.J({...e.database,flags:p(e.flags),encryptionKey:e.encryptionKey}).openDB()}close(e=s.DEFAULT_POWERSYNC_CLOSE_OPTIONS){return this.unloadListener&&window.removeEventListener("unload",this.unloadListener),super.close({disconnect:e.disconnect??!this.resolvedFlags.enableMultiTabs})}connect(e,t){return this.runExclusive((()=>(this.options.logger?.debug("Attempting to connect to PowerSync instance"),super.connect(e,t))))}generateBucketStorageAdapter(){return new s.SqliteBucketStorage(this.database,s.AbstractPowerSyncDatabase.transactionMutex)}runExclusive(e){return this.resolvedFlags.ssrMode?g.SHARED_MUTEX.runExclusive(e):(0,i.A)().request(`lock-${this.database.name}`,e)}generateSyncStreamImplementation(e){const t=new u.H(e),n={...this.options,flags:this.resolvedFlags,adapter:this.bucketStorageAdapter,remote:t,uploadCrud:async()=>{await this.waitForReady(),await e.uploadData(this)},identifier:this.database.name};switch(!0){case this.resolvedFlags.ssrMode:return new l(n);case this.resolvedFlags.enableMultiTabs:if(!this.resolvedFlags.broadcastLogs){const e="\n            Multiple tabs are enabled, but broadcasting of logs is disabled.\n            Logs for shared sync worker will only be available in the shared worker context\n          ",t=this.options.logger;t?t.warn(e):console.warn(e)}return new c.H({...n,db:this.database});default:return new d.U(n)}}}},710:e=>{e.exports=require("@journeyapps/wa-sqlite/src/examples/AccessHandlePoolVFS.js")},790:(e,t,n)=>{n.d(t,{R:()=>c});var s=n(422),r=n(954),i=n.n(r),a=n(599),o=n(268);class c extends s.BaseObserver{options;logger;dbGetHelpers;debugMode;_dbIdentifier;initPromise;_db=null;_disposeTableChangeListener=null;_config=null;constructor(e){if(super(),this.options=e,this._dbIdentifier=e.name,this.logger=e.logger??i().get(`LockedAsyncDatabaseAdapter - ${this._dbIdentifier}`),this.debugMode=e.debugMode??!1,this.debugMode){const e=this._execute.bind(this);this._execute=async(t,n)=>{const s=performance.now();try{const r=await e(t,n);return performance.measure(`[SQL] ${t}`,{start:s}),r}catch(e){throw performance.measure(`[SQL] [ERROR: ${e.message}] ${t}`,{start:s}),e}}}this.dbGetHelpers=this.generateDBHelpers({execute:(e,t)=>this.acquireLock((()=>this._execute(e,t)))}),this.initPromise=this._init()}get baseDB(){if(!this._db)throw new Error("Initialization has not completed yet. Cannot access base db");return this._db}get name(){return this._dbIdentifier}async init(){return this.initPromise}async _init(){this._db=await this.options.openConnection(),await this._db.init(),this._config=await this._db.getConfig(),await this.registerOnChangeListener(this._db),this.iterateListeners((e=>e.initialized?.()))}getConfiguration(){if(!this._config)throw new Error("Cannot get config before initialization is completed");return this._config}async waitForInitialized(){await this.initPromise}async shareConnection(){if(0==this._db instanceof o.$)throw new Error("Only worker connections can be shared");return this._db.shareConnection()}async registerOnChangeListener(e){this._disposeTableChangeListener=await e.registerOnTableChange((e=>{this.iterateListeners((t=>t.tablesUpdated?.(e)))}))}async refreshSchema(){}async execute(e,t){return this.writeLock((n=>n.execute(e,t)))}async executeBatch(e,t){return this.writeLock((n=>this._executeBatch(e,t)))}close(){this._disposeTableChangeListener?.(),this.baseDB?.close?.()}async getAll(e,t){return await this.waitForInitialized(),this.dbGetHelpers.getAll(e,t)}async getOptional(e,t){return await this.waitForInitialized(),this.dbGetHelpers.getOptional(e,t)}async get(e,t){return await this.waitForInitialized(),this.dbGetHelpers.get(e,t)}async readLock(e,t){return await this.waitForInitialized(),this.acquireLock((async()=>e(this.generateDBHelpers({execute:this._execute}))))}async writeLock(e,t){return await this.waitForInitialized(),this.acquireLock((async()=>e(this.generateDBHelpers({execute:this._execute}))))}acquireLock(e){return(0,a.A)().request(`db-lock-${this._dbIdentifier}`,e)}async readTransaction(e,t){return this.readLock(this.wrapTransaction(e))}writeTransaction(e,t){return this.writeLock(this.wrapTransaction(e))}generateDBHelpers(e){return{...e,async getAll(t,n){const s=await e.execute(t,n);return s.rows?._array??[]},async getOptional(t,n){const s=await e.execute(t,n);return s.rows?.item(0)??null},async get(t,n){const s=await e.execute(t,n),r=s.rows?.item(0);if(!r)throw new Error("Result set is empty");return r}}}wrapTransaction(e){return async t=>{await this._execute("BEGIN TRANSACTION");let n=!1;const s=async()=>n?{rowsAffected:0}:(n=!0,this._execute("COMMIT")),r=()=>(n=!0,this._execute("ROLLBACK"));try{const i=await e({...t,commit:s,rollback:r});return n||await s(),i}catch(e){this.logger.debug("Caught ex in transaction",e);try{await r()}catch(e){}throw e}}}_execute=async(e,t)=>{await this.waitForInitialized();const n=await this.baseDB.execute(e,t);return{...n,rows:{...n.rows,item:e=>n.rows._array[e]}}};_executeBatch=async(e,t)=>{await this.waitForInitialized();return{...await this.baseDB.executeBatch(e,t),rows:void 0}}}},808:e=>{e.exports=require("@journeyapps/wa-sqlite")},858:e=>{e.exports=require("comlink")},863:(e,t,n)=>{n.d(t,{I:()=>a});var s=n(708),r=n(477),i=n(90);class a extends r.u{openDB(){return new i.J(this.options).openDB()}generateInstance(e){return new s.k1(e)}}},895:e=>{e.exports=require("@journeyapps/wa-sqlite/dist/mc-wa-sqlite-async.mjs")},910:(e,t,n)=>{n.d(t,{P:()=>u});var s=n(954),r=n.n(s),i=n(422),a=n(354);const o={rowsAffected:0};class c extends i.BaseObserver{name;readMutex;writeMutex;constructor(){super(),this.name="SSR DB",this.readMutex=new a.Mutex,this.writeMutex=new a.Mutex}close(){}async readLock(e,t){return this.readMutex.runExclusive((()=>e(this)))}async readTransaction(e,t){return this.readLock((()=>e(this.generateMockTransactionContext())))}async writeLock(e,t){return this.writeMutex.runExclusive((()=>e(this)))}async writeTransaction(e,t){return this.writeLock((()=>e(this.generateMockTransactionContext())))}async execute(e,t){return this.writeMutex.runExclusive((async()=>o))}async executeBatch(e,t){return this.writeMutex.runExclusive((async()=>o))}async getAll(e,t){return[]}async getOptional(e,t){return null}async get(e,t){throw new Error("No values are returned in SSR mode")}generateMockTransactionContext(){return{...this,commit:async()=>o,rollback:async()=>o}}async refreshSchema(){}}var l=n(411);class u{options;resolvedFlags;logger;constructor(e){this.options=e,this.resolvedFlags=(0,l.Yd)(e.flags),this.logger=e.logger??r().get(`AbstractWebSQLOpenFactory - ${this.options.dbFilename}`)}openDB(){const{resolvedFlags:{disableSSRWarning:e,enableMultiTabs:t,ssrMode:n=(0,l.fL)()}}=this;return n&&!e&&console.warn("\n  Running PowerSync in SSR mode.\n  Only empty query results will be returned.\n  Disable this warning by setting 'disableSSRWarning: true' in options."),t||console.warn("Multiple tab support is not enabled. Using this site across multiple tabs may not function correctly."),n?new c:this.openAdapter()}}},914:e=>{e.exports=require("@journeyapps/wa-sqlite/dist/wa-sqlite-async.mjs")},950:e=>{e.exports=require("@journeyapps/wa-sqlite/src/examples/OPFSCoopSyncVFS.js")},954:e=>{e.exports=require("js-logger")},971:e=>{e.exports=require("@journeyapps/wa-sqlite/dist/wa-sqlite.mjs")}},s={};function r(e){var t=s[e];if(void 0!==t)return t.exports;var i=s[e]={exports:{}};return n[e](i,i.exports,r),i.exports}r.m=n,r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,r.t=function(n,s){if(1&s&&(n=this(n)),8&s)return n;if("object"==typeof n&&n){if(4&s&&n.__esModule)return n;if(16&s&&"function"==typeof n.then)return n}var i=Object.create(null);r.r(i);var a={};e=e||[null,t({}),t([]),t(t)];for(var o=2&s&&n;"object"==typeof o&&!~e.indexOf(o);o=t(o))Object.getOwnPropertyNames(o).forEach((e=>a[e]=()=>n[e]));return a.default=()=>n,r.d(i,a),i},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.u=e=>e+".index.umd.js",r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var s=n.length-1;s>-1&&(!e||!/^http(s?):/.test(e));)e=n[s--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),r.b=document.baseURI||self.location.href;var i={};r.r(i),r.d(i,{AbstractWebPowerSyncDatabaseOpenFactory:()=>c.u,AbstractWebSQLOpenFactory:()=>l.P,AsyncWASQLiteModuleFactory:()=>u.Xg,DEFAULT_MODULE_FACTORIES:()=>u.Iy,DEFAULT_POWERSYNC_FLAGS:()=>y.Do,DEFAULT_WEB_SQL_FLAGS:()=>g.sZ,MultiCipherAsyncWASQLiteModuleFactory:()=>u.rC,MultiCipherSyncWASQLiteModuleFactory:()=>u.Wk,PowerSyncDatabase:()=>y.k1,SharedWebStreamingSyncImplementation:()=>b.H,SyncWASQLiteModuleFactory:()=>u.oB,TemporaryStorageOption:()=>g.IN,WASQLiteDBAdapter:()=>d.e,WASQLiteOpenFactory:()=>h.J,WASQLitePowerSyncDatabaseOpenFactory:()=>p.I,WASQLiteVFS:()=>u.GD,WASqliteConnection:()=>u.Ry,WebRemote:()=>w.H,WebStreamingSyncImplementation:()=>f.U,isServerSide:()=>g.fL,resolveWebPowerSyncFlags:()=>y.yV,resolveWebSQLFlags:()=>g.Yd});var a=r(422),o={};for(const e in a)"default"!==e&&(o[e]=()=>a[e]);r.d(i,o);var c=r(477),l=r(910),u=r(84),d=r(47),h=r(90),p=r(863),g=r(411),y=r(708),b=r(486),w=r(417),f=r(498);return i})()));